% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/my_knn_cv.r
\name{my_knn_cv}
\alias{my_knn_cv}
\title{k-Nearest Neighbour Cross-Validatory Classification}
\usage{
my_knn_cv(train, cl, k_nn, k_cv)
}
\arguments{
\item{train}{data frame of the training set cases.}

\item{cl}{factor of true classification values for the training data.}

\item{k_nn}{numeric input, representing the number of neighbors considered.}

\item{k_cv}{numeric input, representing the number of folds used
for cross-validation.}
}
\value{
A list object with the following elements: \code{class} - a vector
of predicted classification for all observations, \code{cv_err} - numeric
with with the cross-validation mis-classification error.
}
\description{
This function performs k-nearest neighbour cross-validatory classification
from training set.
}
\examples{
library(tidyverse)
peng_no_na <- my_penguins \%>\%
  select(
    species, bill_length_mm, bill_depth_mm, flipper_length_mm,
    body_mass_g
  ) \%>\%
  drop_na()

## Predict output class species
peng_cl <- peng_no_na$species
len <- length(peng_cl)

## Setup train data
peng_no_na_train <- peng_no_na \%>\% select(-species)

## setup knn with k = 1 and calculate training error

k_cv <- 5
knn_1 <- my_knn_cv(peng_no_na_train, peng_cl, k_nn = 1, k_cv = k_cv)
train_err_1 <- sum(as.integer(knn_1$class) != as.integer(peng_cl)) / len

## setup knn with k = 5 and calculate training error
knn_5 <- my_knn_cv(peng_no_na_train, peng_cl, k_nn = 5, k_cv = k_cv)
train_err_5 <- sum(as.integer(knn_5$class) != as.integer(peng_cl)) / len
}
\keyword{prediction}
